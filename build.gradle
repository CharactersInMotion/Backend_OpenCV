plugins {
    id "java"
    id "application"
}

group "dev.upcraft"
archivesBaseName = "characters-in-motion"
version "development"

compileJava {
    options.release.set(8)
}

application {
    mainClass.set("dev.upcraft.charactersinmotion.main.Main")
}

run {
    workingDir("run")

    args() // add custom arguments here
    doFirst {
        workingDir.mkdirs()
    }
}

tasks.withType(Jar) {
    manifest.mainAttributes(
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "Maven-Artifact": "${project.group}:${archivesBaseName}:${project.version}".toLowerCase(Locale.ROOT),
            "Built-On-Java": "${System.getProperty("java.vm.version")} (${System.getProperty("java.vm.vendor")})"
    )
}

test {
    useJUnitPlatform()
    testLogging {
        //events "passed", "skipped", "failed"
    }
}

repositories {
    jcenter()
}

dependencies {
    compileOnly "org.jetbrains:annotations:${project.jetbrains_annotations_version}"

    // openCV
    implementation "org.openpnp:opencv:${project.opencv_version}"

    // math and vector library
    implementation "org.joml:joml:${project.joml_version}"

    // real time compression library
    implementation "org.lwjgl:lwjgl-zstd:${project.lwjgl_version}"

    // logging
    implementation "org.apache.logging.log4j:log4j-api:${project.log4j_version}"
    runtimeOnly "org.apache.logging.log4j:log4j-core:${project.log4j_version}"

    // CLI arguments
    implementation "net.sf.jopt-simple:jopt-simple:${project.jopt_version}"

    // JSON parsing
    implementation "com.google.code.gson:gson:${project.gson_version}"

    // utils
    implementation "com.google.guava:guava:${project.guava_version}-jre"
    implementation "it.unimi.dsi:fastutil:${project.fastutil_version}"

    // testing
    testImplementation platform("org.junit:junit-bom:${project.junit_version}")
    testImplementation "org.junit.jupiter:junit-jupiter"
}
